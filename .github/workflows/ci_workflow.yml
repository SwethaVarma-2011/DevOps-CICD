name: CI workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  build_and_test:
    runs-on: ubuntu-latest 
    steps: 
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12 
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt    

      #- name: Run unit tests             
      #  run: |
      #    pytest --junitxml=test-results.xml
#
      #- name: Archive test results
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: test-results
      #    path: test-results.xml    

  #code_analysis:
#
  #  runs-on: unbuntu-latest
  #  steps:
  #    - name: checkout repository
  #      uses: actions/checkout@v3 
#
  #    - name: Perform code scan
  #      uses: github/codeql-action/init@v2
  #      with:
  #        languages: python
#
  #    - name: Perform CodeQL analysis
  #      uses: github/codeql-action/analyze@v2
  code_scan:
    runs-on: ubuntu-latest
    needs: build_and_test  # Runs after the build_and_test job
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install PyLint
        run: |
          python -m pip install pylint

      - name: Run PyLint
        run: |
          pylint **/*.py

  build_and_push_docker_image:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          content: .
          file: ./dockerfile
          push: true
          tags: ${{secrets.DOCKERHUB_USERNAME}}/web-app:${{github.run_id}}  

  update_helm_values:
    runs-on: ubuntu-latest
    needs: build_and_push_docker_image
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{secrets.TOKEN}}

      - name: Update tag in Helm chart
        run: |
          sed -i 's/tag: .*/tag: "${{github.run_id}}"/' helm/python-web-app/values.yaml

      - name: Commit and push changes
        run: |
          git config --global user.email "swethavarma432@gmail.com"
          git config --global user.name "Swetha"
          git add ./
          git commit -m "Updating changes"
          git push    